{
    "sourceFile": "src/App.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 27,
            "patches": [
                {
                    "date": 1712130310090,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1712130345159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,9 +68,9 @@\n         </button>\n       </div>\n \n       <ul>\n-        \n+        {al}\n         <ul>\n           <li data-cy=\"Good\">Dumplings</li>\n           <li data-cy=\"Good\">Carrot</li>\n           <li data-cy=\"Good\">Eggs</li>\n"
                },
                {
                    "date": 1712130355530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,84 @@\n+import React from 'react';\n+import 'bulma/css/bulma.css';\n+import './App.scss';\n+\n+export const goodsFromServer = [\n+  'Dumplings',\n+  'Carrot',\n+  'Eggs',\n+  'Ice cream',\n+  'Apple',\n+  'Bread',\n+  'Fish',\n+  'Honey',\n+  'Jam',\n+  'Garlic',\n+];\n+\n+enum SortType {\n+  NONE,\n+  ALPHABET,\n+  LENGTH,\n+}\n+\n+type ReorderOptions = {\n+  sortType: SortType;\n+  isReversed: boolean;\n+};\n+\n+// Use this function in the render method to prepare goods\n+export function getReorderedGoods(\n+  goods: string[],\n+  { sortType, isReversed }: ReorderOptions,\n+) {\n+  // To avoid the original array mutation\n+  const visibleGoods = [...goods];\n+\n+  // Sort and reverse goods if needed\n+  // eslint-disable-next-line no-console\n+  console.log(sortType, isReversed);\n+\n+  return visibleGoods;\n+}\n+\n+// DON'T save goods to the state\n+// type State = {\n+//   isReversed: boolean,\n+//   sortType: SortType,\n+// };\n+\n+export const App: React.FC = () => {\n+  return (\n+    <div className=\"section content\">\n+      <div className=\"buttons\">\n+        <button type=\"button\" className=\"button is-info is-light\">\n+          Sort alphabetically\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-success is-light\">\n+          Sort by length\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-warning is-light\">\n+          Reverse\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-danger is-light\">\n+          Reset\n+        </button>\n+      </div>\n+\n+      <ul>\n+        {allGoods.ma}\n+        <ul>\n+          <li data-cy=\"Good\">Dumplings</li>\n+          <li data-cy=\"Good\">Carrot</li>\n+          <li data-cy=\"Good\">Eggs</li>\n+          <li data-cy=\"Good\">Ice cream</li>\n+          <li data-cy=\"Good\">Apple</li>\n+          <li data-cy=\"Good\">...</li>\n+        </ul>\n+      </ul>\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1712130364546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,84 @@\n+import React from 'react';\n+import 'bulma/css/bulma.css';\n+import './App.scss';\n+\n+export const goodsFromServer = [\n+  'Dumplings',\n+  'Carrot',\n+  'Eggs',\n+  'Ice cream',\n+  'Apple',\n+  'Bread',\n+  'Fish',\n+  'Honey',\n+  'Jam',\n+  'Garlic',\n+];\n+\n+enum SortType {\n+  NONE,\n+  ALPHABET,\n+  LENGTH,\n+}\n+\n+type ReorderOptions = {\n+  sortType: SortType;\n+  isReversed: boolean;\n+};\n+\n+// Use this function in the render method to prepare goods\n+export function getReorderedGoods(\n+  goods: string[],\n+  { sortType, isReversed }: ReorderOptions,\n+) {\n+  // To avoid the original array mutation\n+  const visibleGoods = [...goods];\n+\n+  // Sort and reverse goods if needed\n+  // eslint-disable-next-line no-console\n+  console.log(sortType, isReversed);\n+\n+  return visibleGoods;\n+}\n+\n+// DON'T save goods to the state\n+// type State = {\n+//   isReversed: boolean,\n+//   sortType: SortType,\n+// };\n+\n+export const App: React.FC = () => {\n+  return (\n+    <div className=\"section content\">\n+      <div className=\"buttons\">\n+        <button type=\"button\" className=\"button is-info is-light\">\n+          Sort alphabetically\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-success is-light\">\n+          Sort by length\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-warning is-light\">\n+          Reverse\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-danger is-light\">\n+          Reset\n+        </button>\n+      </div>\n+\n+      <ul>\n+        {allGoods.map((good) =)}\n+        <ul>\n+          <li data-cy=\"Good\">Dumplings</li>\n+          <li data-cy=\"Good\">Carrot</li>\n+          <li data-cy=\"Good\">Eggs</li>\n+          <li data-cy=\"Good\">Ice cream</li>\n+          <li data-cy=\"Good\">Apple</li>\n+          <li data-cy=\"Good\">...</li>\n+        </ul>\n+      </ul>\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1712130386887,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,84 @@\n+import React from 'react';\n+import 'bulma/css/bulma.css';\n+import './App.scss';\n+\n+export const goodsFromServer = [\n+  'Dumplings',\n+  'Carrot',\n+  'Eggs',\n+  'Ice cream',\n+  'Apple',\n+  'Bread',\n+  'Fish',\n+  'Honey',\n+  'Jam',\n+  'Garlic',\n+];\n+\n+enum SortType {\n+  NONE,\n+  ALPHABET,\n+  LENGTH,\n+}\n+\n+type ReorderOptions = {\n+  sortType: SortType;\n+  isReversed: boolean;\n+};\n+\n+// Use this function in the render method to prepare goods\n+export function getReorderedGoods(\n+  goods: string[],\n+  { sortType, isReversed }: ReorderOptions,\n+) {\n+  // To avoid the original array mutation\n+  const visibleGoods = [...goods];\n+\n+  // Sort and reverse goods if needed\n+  // eslint-disable-next-line no-console\n+  console.log(sortType, isReversed);\n+\n+  return visibleGoods;\n+}\n+\n+// DON'T save goods to the state\n+// type State = {\n+//   isReversed: boolean,\n+//   sortType: SortType,\n+// };\n+\n+export const App: React.FC = () => {\n+  return (\n+    <div className=\"section content\">\n+      <div className=\"buttons\">\n+        <button type=\"button\" className=\"button is-info is-light\">\n+          Sort alphabetically\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-success is-light\">\n+          Sort by length\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-warning is-light\">\n+          Reverse\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-danger is-light\">\n+          Reset\n+        </button>\n+      </div>\n+\n+      <ul>\n+        {allGoods.map((good) => ())}\n+        <ul>\n+          <li data-cy=\"Good\">Dumplings</li>\n+          <li data-cy=\"Good\">Carrot</li>\n+          <li data-cy=\"Good\">Eggs</li>\n+          <li data-cy=\"Good\">Ice cream</li>\n+          <li data-cy=\"Good\">Apple</li>\n+          <li data-cy=\"Good\">...</li>\n+        </ul>\n+      </ul>\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1712130400459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+import React from 'react';\n+import 'bulma/css/bulma.css';\n+import './App.scss';\n+\n+export const goodsFromServer = [\n+  'Dumplings',\n+  'Carrot',\n+  'Eggs',\n+  'Ice cream',\n+  'Apple',\n+  'Bread',\n+  'Fish',\n+  'Honey',\n+  'Jam',\n+  'Garlic',\n+];\n+\n+enum SortType {\n+  NONE,\n+  ALPHABET,\n+  LENGTH,\n+}\n+\n+type ReorderOptions = {\n+  sortType: SortType;\n+  isReversed: boolean;\n+};\n+\n+// Use this function in the render method to prepare goods\n+export function getReorderedGoods(\n+  goods: string[],\n+  { sortType, isReversed }: ReorderOptions,\n+) {\n+  // To avoid the original array mutation\n+  const visibleGoods = [...goods];\n+\n+  // Sort and reverse goods if needed\n+  // eslint-disable-next-line no-console\n+  console.log(sortType, isReversed);\n+\n+  return visibleGoods;\n+}\n+\n+// DON'T save goods to the state\n+// type State = {\n+//   isReversed: boolean,\n+//   sortType: SortType,\n+// };\n+\n+export const App: React.FC = () => {\n+  return (\n+    <div className=\"section content\">\n+      <div className=\"buttons\">\n+        <button type=\"button\" className=\"button is-info is-light\">\n+          Sort alphabetically\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-success is-light\">\n+          Sort by length\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-warning is-light\">\n+          Reverse\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-danger is-light\">\n+          Reset\n+        </button>\n+      </div>\n+\n+      <ul>\n+        {allGoods.map((good) => (\n+          <li data-cy=\"Good\" key>Dumplings</li>\n+        ))}\n+        <ul>\n+          <li data-cy=\"Good\">Dumplings</li>\n+          <li data-cy=\"Good\">Carrot</li>\n+          <li data-cy=\"Good\">Eggs</li>\n+          <li data-cy=\"Good\">Ice cream</li>\n+          <li data-cy=\"Good\">Apple</li>\n+          <li data-cy=\"Good\">...</li>\n+        </ul>\n+      </ul>\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1712130412236,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+import React from 'react';\n+import 'bulma/css/bulma.css';\n+import './App.scss';\n+\n+export const goodsFromServer = [\n+  'Dumplings',\n+  'Carrot',\n+  'Eggs',\n+  'Ice cream',\n+  'Apple',\n+  'Bread',\n+  'Fish',\n+  'Honey',\n+  'Jam',\n+  'Garlic',\n+];\n+\n+enum SortType {\n+  NONE,\n+  ALPHABET,\n+  LENGTH,\n+}\n+\n+type ReorderOptions = {\n+  sortType: SortType;\n+  isReversed: boolean;\n+};\n+\n+// Use this function in the render method to prepare goods\n+export function getReorderedGoods(\n+  goods: string[],\n+  { sortType, isReversed }: ReorderOptions,\n+) {\n+  // To avoid the original array mutation\n+  const visibleGoods = [...goods];\n+\n+  // Sort and reverse goods if needed\n+  // eslint-disable-next-line no-console\n+  console.log(sortType, isReversed);\n+\n+  return visibleGoods;\n+}\n+\n+// DON'T save goods to the state\n+// type State = {\n+//   isReversed: boolean,\n+//   sortType: SortType,\n+// };\n+\n+export const App: React.FC = () => {\n+  return (\n+    <div className=\"section content\">\n+      <div className=\"buttons\">\n+        <button type=\"button\" className=\"button is-info is-light\">\n+          Sort alphabetically\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-success is-light\">\n+          Sort by length\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-warning is-light\">\n+          Reverse\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-danger is-light\">\n+          Reset\n+        </button>\n+      </div>\n+\n+      <ul>\n+        {allGoods.map((good) => (\n+          <li data-cy=\"Good\" key={good}>{goo}</li>\n+        ))}\n+        <ul>\n+          <li data-cy=\"Good\">Dumplings</li>\n+          <li data-cy=\"Good\">Carrot</li>\n+          <li data-cy=\"Good\">Eggs</li>\n+          <li data-cy=\"Good\">Ice cream</li>\n+          <li data-cy=\"Good\">Apple</li>\n+          <li data-cy=\"Good\">...</li>\n+        </ul>\n+      </ul>\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1712130432591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,87 @@\n+import React from 'react';\n+import 'bulma/css/bulma.css';\n+import './App.scss';\n+\n+export const goodsFromServer = [\n+  'Dumplings',\n+  'Carrot',\n+  'Eggs',\n+  'Ice cream',\n+  'Apple',\n+  'Bread',\n+  'Fish',\n+  'Honey',\n+  'Jam',\n+  'Garlic',\n+];\n+\n+enum SortType {\n+  NONE,\n+  ALPHABET,\n+  LENGTH,\n+}\n+\n+type ReorderOptions = {\n+  sortType: SortType;\n+  isReversed: boolean;\n+};\n+\n+// Use this function in the render method to prepare goods\n+export function getReorderedGoods(\n+  goods: string[],\n+  { sortType, isReversed }: ReorderOptions,\n+) {\n+  // To avoid the original array mutation\n+  const visibleGoods = [...goods];\n+\n+  // Sort and reverse goods if needed\n+  // eslint-disable-next-line no-console\n+  console.log(sortType, isReversed);\n+\n+  return visibleGoods;\n+}\n+\n+// DON'T save goods to the state\n+// type State = {\n+//   isReversed: boolean,\n+//   sortType: SortType,\n+// };\n+\n+export const App: React.FC = () => {\n+  return (\n+    <div className=\"section content\">\n+      <div className=\"buttons\">\n+        <button type=\"button\" className=\"button is-info is-light\">\n+          Sort alphabetically\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-success is-light\">\n+          Sort by length\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-warning is-light\">\n+          Reverse\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-danger is-light\">\n+          Reset\n+        </button>\n+      </div>\n+\n+      <ul>\n+        {allGoods.map((good) => (\n+          <li data-cy=\"Good\" key={good}>{good}\n+          </li>\n+        ))}\n+        <ul>\n+          <li data-cy=\"Good\">Dumplings</li>\n+          <li data-cy=\"Good\">Carrot</li>\n+          <li data-cy=\"Good\">Eggs</li>\n+          <li data-cy=\"Good\">Ice cream</li>\n+          <li data-cy=\"Good\">Apple</li>\n+          <li data-cy=\"Good\">...</li>\n+        </ul>\n+      </ul>\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1712130442605,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,82 @@\n+import React from 'react';\n+import 'bulma/css/bulma.css';\n+import './App.scss';\n+\n+export const goodsFromServer = [\n+  'Dumplings',\n+  'Carrot',\n+  'Eggs',\n+  'Ice cream',\n+  'Apple',\n+  'Bread',\n+  'Fish',\n+  'Honey',\n+  'Jam',\n+  'Garlic',\n+];\n+\n+enum SortType {\n+  NONE,\n+  ALPHABET,\n+  LENGTH,\n+}\n+\n+type ReorderOptions = {\n+  sortType: SortType;\n+  isReversed: boolean;\n+};\n+\n+// Use this function in the render method to prepare goods\n+export function getReorderedGoods(\n+  goods: string[],\n+  { sortType, isReversed }: ReorderOptions,\n+) {\n+  // To avoid the original array mutation\n+  const visibleGoods = [...goods];\n+\n+  // Sort and reverse goods if needed\n+  // eslint-disable-next-line no-console\n+  console.log(sortType, isReversed);\n+\n+  return visibleGoods;\n+}\n+\n+// DON'T save goods to the state\n+// type State = {\n+//   isReversed: boolean,\n+//   sortType: SortType,\n+// };\n+\n+export const App: React.FC = () => {\n+  return (\n+    <div className=\"section content\">\n+      <div className=\"buttons\">\n+        <button type=\"button\" className=\"button is-info is-light\">\n+          Sort alphabetically\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-success is-light\">\n+          Sort by length\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-warning is-light\">\n+          Reverse\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-danger is-light\">\n+          Reset\n+        </button>\n+      </div>\n+\n+      <ul>\n+        {allGoods.map(good => (\n+          <li data-cy=\"Good\" key={good}>\n+            {good}\n+          </li>\n+        ))}\n+        <ul>\n+        \n+      </ul>\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1712130466021,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,80 @@\n+import React from 'react';\n+import 'bulma/css/bulma.css';\n+import './App.scss';\n+\n+export const goodsFromServer = [\n+  'Dumplings',\n+  'Carrot',\n+  'Eggs',\n+  'Ice cream',\n+  'Apple',\n+  'Bread',\n+  'Fish',\n+  'Honey',\n+  'Jam',\n+  'Garlic',\n+];\n+\n+enum SortType {\n+  NONE,\n+  ALPHABET,\n+  LENGTH,\n+}\n+\n+type ReorderOptions = {\n+  sortType: SortType;\n+  isReversed: boolean;\n+};\n+\n+// Use this function in the render method to prepare goods\n+export function getReorderedGoods(\n+  goods: string[],\n+  { sortType, isReversed }: ReorderOptions,\n+) {\n+  // To avoid the original array mutation\n+  const visibleGoods = [...goods];\n+\n+  // Sort and reverse goods if needed\n+  // eslint-disable-next-line no-console\n+  console.log(sortType, isReversed);\n+\n+  return visibleGoods;\n+}\n+\n+// DON'T save goods to the state\n+// type State = {\n+//   isReversed: boolean,\n+//   sortType: SortType,\n+// };\n+\n+export const App: React.FC = () => {\n+  return (\n+    <div className=\"section content\">\n+      <div className=\"buttons\">\n+        <button type=\"button\" className=\"button is-info is-light\">\n+          Sort alphabetically\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-success is-light\">\n+          Sort by length\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-warning is-light\">\n+          Reverse\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-danger is-light\">\n+          Reset\n+        </button>\n+      </div>\n+\n+      <ul>\n+        {allGoods.map(good => (\n+          <li data-cy=\"Good\" key={good}>\n+            {good}\n+          </li>\n+        ))}\n+        <ul\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1712130471148,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,80 @@\n+import React from 'react';\n+import 'bulma/css/bulma.css';\n+import './App.scss';\n+\n+export const goodsFromServer = [\n+  'Dumplings',\n+  'Carrot',\n+  'Eggs',\n+  'Ice cream',\n+  'Apple',\n+  'Bread',\n+  'Fish',\n+  'Honey',\n+  'Jam',\n+  'Garlic',\n+];\n+\n+enum SortType {\n+  NONE,\n+  ALPHABET,\n+  LENGTH,\n+}\n+\n+type ReorderOptions = {\n+  sortType: SortType;\n+  isReversed: boolean;\n+};\n+\n+// Use this function in the render method to prepare goods\n+export function getReorderedGoods(\n+  goods: string[],\n+  { sortType, isReversed }: ReorderOptions,\n+) {\n+  // To avoid the original array mutation\n+  const visibleGoods = [...goods];\n+\n+  // Sort and reverse goods if needed\n+  // eslint-disable-next-line no-console\n+  console.log(sortType, isReversed);\n+\n+  return visibleGoods;\n+}\n+\n+// DON'T save goods to the state\n+// type State = {\n+//   isReversed: boolean,\n+//   sortType: SortType,\n+// };\n+\n+export const App: React.FC = () => {\n+  return (\n+    <div className=\"section content\">\n+      <div className=\"buttons\">\n+        <button type=\"button\" className=\"button is-info is-light\">\n+          Sort alphabetically\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-success is-light\">\n+          Sort by length\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-warning is-light\">\n+          Reverse\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-danger is-light\">\n+          Reset\n+        </button>\n+      </div>\n+\n+      <ul>\n+        {allGoods.map(good => (\n+          <li data-cy=\"Good\" key={good}>\n+            {good}\n+          </li>\n+        ))}\n+        <ul>\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1712130492516,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,80 @@\n+import React from 'react';\n+import 'bulma/css/bulma.css';\n+import './App.scss';\n+\n+export const goodsFromServer = [\n+  'Dumplings',\n+  'Carrot',\n+  'Eggs',\n+  'Ice cream',\n+  'Apple',\n+  'Bread',\n+  'Fish',\n+  'Honey',\n+  'Jam',\n+  'Garlic',\n+];\n+\n+enum SortType {\n+  NONE,\n+  ALPHABET,\n+  LENGTH,\n+}\n+\n+type ReorderOptions = {\n+  sortType: SortType;\n+  isReversed: boolean;\n+};\n+\n+// Use this function in the render method to prepare goods\n+export function getReorderedGoods(\n+  goods: string[],\n+  { sortType, isReversed }: ReorderOptions,\n+) {\n+  // To avoid the original array mutation\n+  const visibleGoods = [...goods];\n+\n+  // Sort and reverse goods if needed\n+  // eslint-disable-next-line no-console\n+  console.log(sortType, isReversed);\n+\n+  return visibleGoods;\n+}\n+\n+// DON'T save goods to the state\n+// type State = {\n+//   isReversed: boolean,\n+//   sortType: SortType,\n+// };\n+\n+export const App: React.FC = () => {\n+  return (\n+    <div className=\"section content\">\n+      <div className=\"buttons\">\n+        <button type=\"button\" className=\"button is-info is-light\">\n+          Sort alphabetically\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-success is-light\">\n+          Sort by length\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-warning is-light\">\n+          Reverse\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-danger is-light\">\n+          Reset\n+        </button>\n+      </div>\n+\n+      <ul>\n+        {visibleGoods.map(good => (\n+          <li data-cy=\"Good\" key={good}>\n+            {good}\n+          </li>\n+        ))}\n+      </ul>\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1712130498675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,80 @@\n+import React from 'react';\n+import 'bulma/css/bulma.css';\n+import './App.scss';\n+\n+export const goodsFromServer = [\n+  'Dumplings',\n+  'Carrot',\n+  'Eggs',\n+  'Ice cream',\n+  'Apple',\n+  'Bread',\n+  'Fish',\n+  'Honey',\n+  'Jam',\n+  'Garlic',\n+];\n+\n+enum SortType {\n+  NONE,\n+  ALPHABET,\n+  LENGTH,\n+}\n+\n+type ReorderOptions = {\n+  sortType: SortType;\n+  isReversed: boolean;\n+};\n+\n+// Use this function in the render method to prepare goods\n+export function getReorderedGoods(\n+  goods: string[],\n+  { sortType, isReversed }: ReorderOptions,\n+) {\n+  // To avoid the original array mutation\n+  const visibleGoods = [...goods];\n+\n+  // Sort and reverse goods if needed\n+  // eslint-disable-next-line no-console\n+  console.log(sortType, isReversed);\n+\n+  return visibleGoods;\n+}\n+\n+// DON'T save goods to the state\n+// type State = {\n+//   isReversed: boolean,\n+//   sortType: SortType,\n+// };\n+\n+export const App: React.FC = () => {\n+  return (\n+    <div className=\"section content\">\n+      <div className=\"buttons\">\n+        <button type=\"button\" className=\"button is-info is-light\">\n+          Sort alphabetically\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-success is-light\">\n+          Sort by length\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-warning is-light\">\n+          Reverse\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-danger is-light\">\n+          Reset\n+        </button>\n+      </div>\n+\n+      <ul>\n+        {aGoods.map(good => (\n+          <li data-cy=\"Good\" key={good}>\n+            {good}\n+          </li>\n+        ))}\n+      </ul>\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1712130558789,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,81 @@\n+import React from 'react';\n+import 'bulma/css/bulma.css';\n+import './App.scss';\n+\n+export const goodsFromServer = [\n+  'Dumplings',\n+  'Carrot',\n+  'Eggs',\n+  'Ice cream',\n+  'Apple',\n+  'Bread',\n+  'Fish',\n+  'Honey',\n+  'Jam',\n+  'Garlic',\n+];\n+\n+enum SortType {\n+  NONE,\n+  ALPHABET,\n+  LENGTH,\n+}\n+\n+type ReorderOptions = {\n+  sortType: SortType;\n+  isReversed: boolean;\n+};\n+\n+// Use this function in the render method to prepare goods\n+export function getReorderedGoods(\n+  goods: string[],\n+  { sortType, isReversed }: ReorderOptions,\n+) {\n+  // To avoid the original array mutation\n+  const visibleGoods = [...goods];\n+\n+  // Sort and reverse goods if needed\n+  // eslint-disable-next-line no-console\n+  console.log(sortType, isReversed);\n+\n+  return visibleGoods;\n+}\n+\n+// DON'T save goods to the state\n+// type State = {\n+//   isReversed: boolean,\n+//   sortType: SortType,\n+// };\n+\n+export const App: React.FC = () => {\n+  const all\n+  return (\n+    <div className=\"section content\">\n+      <div className=\"buttons\">\n+        <button type=\"button\" className=\"button is-info is-light\">\n+          Sort alphabetically\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-success is-light\">\n+          Sort by length\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-warning is-light\">\n+          Reverse\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-danger is-light\">\n+          Reset\n+        </button>\n+      </div>\n+\n+      <ul>\n+        {allGoods.map(good => (\n+          <li data-cy=\"Good\" key={good}>\n+            {good}\n+          </li>\n+        ))}\n+      </ul>\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1712130563971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,81 @@\n+import React from 'react';\n+import 'bulma/css/bulma.css';\n+import './App.scss';\n+\n+export const goodsFromServer = [\n+  'Dumplings',\n+  'Carrot',\n+  'Eggs',\n+  'Ice cream',\n+  'Apple',\n+  'Bread',\n+  'Fish',\n+  'Honey',\n+  'Jam',\n+  'Garlic',\n+];\n+\n+enum SortType {\n+  NONE,\n+  ALPHABET,\n+  LENGTH,\n+}\n+\n+type ReorderOptions = {\n+  sortType: SortType;\n+  isReversed: boolean;\n+};\n+\n+// Use this function in the render method to prepare goods\n+export function getReorderedGoods(\n+  goods: string[],\n+  { sortType, isReversed }: ReorderOptions,\n+) {\n+  // To avoid the original array mutation\n+  const visibleGoods = [...goods];\n+\n+  // Sort and reverse goods if needed\n+  // eslint-disable-next-line no-console\n+  console.log(sortType, isReversed);\n+\n+  return visibleGoods;\n+}\n+\n+// DON'T save goods to the state\n+// type State = {\n+//   isReversed: boolean,\n+//   sortType: SortType,\n+// };\n+\n+export const App: React.FC = () => {\n+  const allGoods = get\n+  return (\n+    <div className=\"section content\">\n+      <div className=\"buttons\">\n+        <button type=\"button\" className=\"button is-info is-light\">\n+          Sort alphabetically\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-success is-light\">\n+          Sort by length\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-warning is-light\">\n+          Reverse\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-danger is-light\">\n+          Reset\n+        </button>\n+      </div>\n+\n+      <ul>\n+        {allGoods.map(good => (\n+          <li data-cy=\"Good\" key={good}>\n+            {good}\n+          </li>\n+        ))}\n+      </ul>\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1712130621273,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,1082 +78,4 @@\n       </ul>\n     </div>\n   );\n };\n-import React from 'react';\n-import 'bulma/css/bulma.css';\n-import './App.scss';\n-\n-export const goodsFromServer = [\n-  'Dumplings',\n-  'Carrot',\n-  'Eggs',\n-  'Ice cream',\n-  'Apple',\n-  'Bread',\n-  'Fish',\n-  'Honey',\n-  'Jam',\n-  'Garlic',\n-];\n-\n-enum SortType {\n-  NONE,\n-  ALPHABET,\n-  LENGTH,\n-}\n-\n-type ReorderOptions = {\n-  sortType: SortType;\n-  isReversed: boolean;\n-};\n-\n-// Use this function in the render method to prepare goods\n-export function getReorderedGoods(\n-  goods: string[],\n-  { sortType, isReversed }: ReorderOptions,\n-) {\n-  // To avoid the original array mutation\n-  const visibleGoods = [...goods];\n-\n-  // Sort and reverse goods if needed\n-  // eslint-disable-next-line no-console\n-  console.log(sortType, isReversed);\n-\n-  return visibleGoods;\n-}\n-\n-// DON'T save goods to the state\n-// type State = {\n-//   isReversed: boolean,\n-//   sortType: SortType,\n-// };\n-\n-export const App: React.FC = () => {\n-  const all\n-  return (\n-    <div className=\"section content\">\n-      <div className=\"buttons\">\n-        <button type=\"button\" className=\"button is-info is-light\">\n-          Sort alphabetically\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-success is-light\">\n-          Sort by length\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-warning is-light\">\n-          Reverse\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-danger is-light\">\n-          Reset\n-        </button>\n-      </div>\n-\n-      <ul>\n-        {allGoods.map(good => (\n-          <li data-cy=\"Good\" key={good}>\n-            {good}\n-          </li>\n-        ))}\n-      </ul>\n-    </div>\n-  );\n-};\n-import React from 'react';\n-import 'bulma/css/bulma.css';\n-import './App.scss';\n-\n-export const goodsFromServer = [\n-  'Dumplings',\n-  'Carrot',\n-  'Eggs',\n-  'Ice cream',\n-  'Apple',\n-  'Bread',\n-  'Fish',\n-  'Honey',\n-  'Jam',\n-  'Garlic',\n-];\n-\n-enum SortType {\n-  NONE,\n-  ALPHABET,\n-  LENGTH,\n-}\n-\n-type ReorderOptions = {\n-  sortType: SortType;\n-  isReversed: boolean;\n-};\n-\n-// Use this function in the render method to prepare goods\n-export function getReorderedGoods(\n-  goods: string[],\n-  { sortType, isReversed }: ReorderOptions,\n-) {\n-  // To avoid the original array mutation\n-  const visibleGoods = [...goods];\n-\n-  // Sort and reverse goods if needed\n-  // eslint-disable-next-line no-console\n-  console.log(sortType, isReversed);\n-\n-  return visibleGoods;\n-}\n-\n-// DON'T save goods to the state\n-// type State = {\n-//   isReversed: boolean,\n-//   sortType: SortType,\n-// };\n-\n-export const App: React.FC = () => {\n-  return (\n-    <div className=\"section content\">\n-      <div className=\"buttons\">\n-        <button type=\"button\" className=\"button is-info is-light\">\n-          Sort alphabetically\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-success is-light\">\n-          Sort by length\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-warning is-light\">\n-          Reverse\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-danger is-light\">\n-          Reset\n-        </button>\n-      </div>\n-\n-      <ul>\n-        {aGoods.map(good => (\n-          <li data-cy=\"Good\" key={good}>\n-            {good}\n-          </li>\n-        ))}\n-      </ul>\n-    </div>\n-  );\n-};\n-import React from 'react';\n-import 'bulma/css/bulma.css';\n-import './App.scss';\n-\n-export const goodsFromServer = [\n-  'Dumplings',\n-  'Carrot',\n-  'Eggs',\n-  'Ice cream',\n-  'Apple',\n-  'Bread',\n-  'Fish',\n-  'Honey',\n-  'Jam',\n-  'Garlic',\n-];\n-\n-enum SortType {\n-  NONE,\n-  ALPHABET,\n-  LENGTH,\n-}\n-\n-type ReorderOptions = {\n-  sortType: SortType;\n-  isReversed: boolean;\n-};\n-\n-// Use this function in the render method to prepare goods\n-export function getReorderedGoods(\n-  goods: string[],\n-  { sortType, isReversed }: ReorderOptions,\n-) {\n-  // To avoid the original array mutation\n-  const visibleGoods = [...goods];\n-\n-  // Sort and reverse goods if needed\n-  // eslint-disable-next-line no-console\n-  console.log(sortType, isReversed);\n-\n-  return visibleGoods;\n-}\n-\n-// DON'T save goods to the state\n-// type State = {\n-//   isReversed: boolean,\n-//   sortType: SortType,\n-// };\n-\n-export const App: React.FC = () => {\n-  return (\n-    <div className=\"section content\">\n-      <div className=\"buttons\">\n-        <button type=\"button\" className=\"button is-info is-light\">\n-          Sort alphabetically\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-success is-light\">\n-          Sort by length\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-warning is-light\">\n-          Reverse\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-danger is-light\">\n-          Reset\n-        </button>\n-      </div>\n-\n-      <ul>\n-        {visibleGoods.map(good => (\n-          <li data-cy=\"Good\" key={good}>\n-            {good}\n-          </li>\n-        ))}\n-      </ul>\n-    </div>\n-  );\n-};\n-import React from 'react';\n-import 'bulma/css/bulma.css';\n-import './App.scss';\n-\n-export const goodsFromServer = [\n-  'Dumplings',\n-  'Carrot',\n-  'Eggs',\n-  'Ice cream',\n-  'Apple',\n-  'Bread',\n-  'Fish',\n-  'Honey',\n-  'Jam',\n-  'Garlic',\n-];\n-\n-enum SortType {\n-  NONE,\n-  ALPHABET,\n-  LENGTH,\n-}\n-\n-type ReorderOptions = {\n-  sortType: SortType;\n-  isReversed: boolean;\n-};\n-\n-// Use this function in the render method to prepare goods\n-export function getReorderedGoods(\n-  goods: string[],\n-  { sortType, isReversed }: ReorderOptions,\n-) {\n-  // To avoid the original array mutation\n-  const visibleGoods = [...goods];\n-\n-  // Sort and reverse goods if needed\n-  // eslint-disable-next-line no-console\n-  console.log(sortType, isReversed);\n-\n-  return visibleGoods;\n-}\n-\n-// DON'T save goods to the state\n-// type State = {\n-//   isReversed: boolean,\n-//   sortType: SortType,\n-// };\n-\n-export const App: React.FC = () => {\n-  return (\n-    <div className=\"section content\">\n-      <div className=\"buttons\">\n-        <button type=\"button\" className=\"button is-info is-light\">\n-          Sort alphabetically\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-success is-light\">\n-          Sort by length\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-warning is-light\">\n-          Reverse\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-danger is-light\">\n-          Reset\n-        </button>\n-      </div>\n-\n-      <ul>\n-        {allGoods.map(good => (\n-          <li data-cy=\"Good\" key={good}>\n-            {good}\n-          </li>\n-        ))}\n-        <ul>\n-    </div>\n-  );\n-};\n-import React from 'react';\n-import 'bulma/css/bulma.css';\n-import './App.scss';\n-\n-export const goodsFromServer = [\n-  'Dumplings',\n-  'Carrot',\n-  'Eggs',\n-  'Ice cream',\n-  'Apple',\n-  'Bread',\n-  'Fish',\n-  'Honey',\n-  'Jam',\n-  'Garlic',\n-];\n-\n-enum SortType {\n-  NONE,\n-  ALPHABET,\n-  LENGTH,\n-}\n-\n-type ReorderOptions = {\n-  sortType: SortType;\n-  isReversed: boolean;\n-};\n-\n-// Use this function in the render method to prepare goods\n-export function getReorderedGoods(\n-  goods: string[],\n-  { sortType, isReversed }: ReorderOptions,\n-) {\n-  // To avoid the original array mutation\n-  const visibleGoods = [...goods];\n-\n-  // Sort and reverse goods if needed\n-  // eslint-disable-next-line no-console\n-  console.log(sortType, isReversed);\n-\n-  return visibleGoods;\n-}\n-\n-// DON'T save goods to the state\n-// type State = {\n-//   isReversed: boolean,\n-//   sortType: SortType,\n-// };\n-\n-export const App: React.FC = () => {\n-  return (\n-    <div className=\"section content\">\n-      <div className=\"buttons\">\n-        <button type=\"button\" className=\"button is-info is-light\">\n-          Sort alphabetically\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-success is-light\">\n-          Sort by length\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-warning is-light\">\n-          Reverse\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-danger is-light\">\n-          Reset\n-        </button>\n-      </div>\n-\n-      <ul>\n-        {allGoods.map(good => (\n-          <li data-cy=\"Good\" key={good}>\n-            {good}\n-          </li>\n-        ))}\n-        <ul\n-    </div>\n-  );\n-};\n-import React from 'react';\n-import 'bulma/css/bulma.css';\n-import './App.scss';\n-\n-export const goodsFromServer = [\n-  'Dumplings',\n-  'Carrot',\n-  'Eggs',\n-  'Ice cream',\n-  'Apple',\n-  'Bread',\n-  'Fish',\n-  'Honey',\n-  'Jam',\n-  'Garlic',\n-];\n-\n-enum SortType {\n-  NONE,\n-  ALPHABET,\n-  LENGTH,\n-}\n-\n-type ReorderOptions = {\n-  sortType: SortType;\n-  isReversed: boolean;\n-};\n-\n-// Use this function in the render method to prepare goods\n-export function getReorderedGoods(\n-  goods: string[],\n-  { sortType, isReversed }: ReorderOptions,\n-) {\n-  // To avoid the original array mutation\n-  const visibleGoods = [...goods];\n-\n-  // Sort and reverse goods if needed\n-  // eslint-disable-next-line no-console\n-  console.log(sortType, isReversed);\n-\n-  return visibleGoods;\n-}\n-\n-// DON'T save goods to the state\n-// type State = {\n-//   isReversed: boolean,\n-//   sortType: SortType,\n-// };\n-\n-export const App: React.FC = () => {\n-  return (\n-    <div className=\"section content\">\n-      <div className=\"buttons\">\n-        <button type=\"button\" className=\"button is-info is-light\">\n-          Sort alphabetically\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-success is-light\">\n-          Sort by length\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-warning is-light\">\n-          Reverse\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-danger is-light\">\n-          Reset\n-        </button>\n-      </div>\n-\n-      <ul>\n-        {allGoods.map(good => (\n-          <li data-cy=\"Good\" key={good}>\n-            {good}\n-          </li>\n-        ))}\n-        <ul>\n-        \n-      </ul>\n-    </div>\n-  );\n-};\n-import React from 'react';\n-import 'bulma/css/bulma.css';\n-import './App.scss';\n-\n-export const goodsFromServer = [\n-  'Dumplings',\n-  'Carrot',\n-  'Eggs',\n-  'Ice cream',\n-  'Apple',\n-  'Bread',\n-  'Fish',\n-  'Honey',\n-  'Jam',\n-  'Garlic',\n-];\n-\n-enum SortType {\n-  NONE,\n-  ALPHABET,\n-  LENGTH,\n-}\n-\n-type ReorderOptions = {\n-  sortType: SortType;\n-  isReversed: boolean;\n-};\n-\n-// Use this function in the render method to prepare goods\n-export function getReorderedGoods(\n-  goods: string[],\n-  { sortType, isReversed }: ReorderOptions,\n-) {\n-  // To avoid the original array mutation\n-  const visibleGoods = [...goods];\n-\n-  // Sort and reverse goods if needed\n-  // eslint-disable-next-line no-console\n-  console.log(sortType, isReversed);\n-\n-  return visibleGoods;\n-}\n-\n-// DON'T save goods to the state\n-// type State = {\n-//   isReversed: boolean,\n-//   sortType: SortType,\n-// };\n-\n-export const App: React.FC = () => {\n-  return (\n-    <div className=\"section content\">\n-      <div className=\"buttons\">\n-        <button type=\"button\" className=\"button is-info is-light\">\n-          Sort alphabetically\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-success is-light\">\n-          Sort by length\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-warning is-light\">\n-          Reverse\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-danger is-light\">\n-          Reset\n-        </button>\n-      </div>\n-\n-      <ul>\n-        {allGoods.map((good) => (\n-          <li data-cy=\"Good\" key={good}>{good}\n-          </li>\n-        ))}\n-        <ul>\n-          <li data-cy=\"Good\">Dumplings</li>\n-          <li data-cy=\"Good\">Carrot</li>\n-          <li data-cy=\"Good\">Eggs</li>\n-          <li data-cy=\"Good\">Ice cream</li>\n-          <li data-cy=\"Good\">Apple</li>\n-          <li data-cy=\"Good\">...</li>\n-        </ul>\n-      </ul>\n-    </div>\n-  );\n-};\n-import React from 'react';\n-import 'bulma/css/bulma.css';\n-import './App.scss';\n-\n-export const goodsFromServer = [\n-  'Dumplings',\n-  'Carrot',\n-  'Eggs',\n-  'Ice cream',\n-  'Apple',\n-  'Bread',\n-  'Fish',\n-  'Honey',\n-  'Jam',\n-  'Garlic',\n-];\n-\n-enum SortType {\n-  NONE,\n-  ALPHABET,\n-  LENGTH,\n-}\n-\n-type ReorderOptions = {\n-  sortType: SortType;\n-  isReversed: boolean;\n-};\n-\n-// Use this function in the render method to prepare goods\n-export function getReorderedGoods(\n-  goods: string[],\n-  { sortType, isReversed }: ReorderOptions,\n-) {\n-  // To avoid the original array mutation\n-  const visibleGoods = [...goods];\n-\n-  // Sort and reverse goods if needed\n-  // eslint-disable-next-line no-console\n-  console.log(sortType, isReversed);\n-\n-  return visibleGoods;\n-}\n-\n-// DON'T save goods to the state\n-// type State = {\n-//   isReversed: boolean,\n-//   sortType: SortType,\n-// };\n-\n-export const App: React.FC = () => {\n-  return (\n-    <div className=\"section content\">\n-      <div className=\"buttons\">\n-        <button type=\"button\" className=\"button is-info is-light\">\n-          Sort alphabetically\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-success is-light\">\n-          Sort by length\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-warning is-light\">\n-          Reverse\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-danger is-light\">\n-          Reset\n-        </button>\n-      </div>\n-\n-      <ul>\n-        {allGoods.map((good) => (\n-          <li data-cy=\"Good\" key={good}>{goo}</li>\n-        ))}\n-        <ul>\n-          <li data-cy=\"Good\">Dumplings</li>\n-          <li data-cy=\"Good\">Carrot</li>\n-          <li data-cy=\"Good\">Eggs</li>\n-          <li data-cy=\"Good\">Ice cream</li>\n-          <li data-cy=\"Good\">Apple</li>\n-          <li data-cy=\"Good\">...</li>\n-        </ul>\n-      </ul>\n-    </div>\n-  );\n-};\n-import React from 'react';\n-import 'bulma/css/bulma.css';\n-import './App.scss';\n-\n-export const goodsFromServer = [\n-  'Dumplings',\n-  'Carrot',\n-  'Eggs',\n-  'Ice cream',\n-  'Apple',\n-  'Bread',\n-  'Fish',\n-  'Honey',\n-  'Jam',\n-  'Garlic',\n-];\n-\n-enum SortType {\n-  NONE,\n-  ALPHABET,\n-  LENGTH,\n-}\n-\n-type ReorderOptions = {\n-  sortType: SortType;\n-  isReversed: boolean;\n-};\n-\n-// Use this function in the render method to prepare goods\n-export function getReorderedGoods(\n-  goods: string[],\n-  { sortType, isReversed }: ReorderOptions,\n-) {\n-  // To avoid the original array mutation\n-  const visibleGoods = [...goods];\n-\n-  // Sort and reverse goods if needed\n-  // eslint-disable-next-line no-console\n-  console.log(sortType, isReversed);\n-\n-  return visibleGoods;\n-}\n-\n-// DON'T save goods to the state\n-// type State = {\n-//   isReversed: boolean,\n-//   sortType: SortType,\n-// };\n-\n-export const App: React.FC = () => {\n-  return (\n-    <div className=\"section content\">\n-      <div className=\"buttons\">\n-        <button type=\"button\" className=\"button is-info is-light\">\n-          Sort alphabetically\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-success is-light\">\n-          Sort by length\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-warning is-light\">\n-          Reverse\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-danger is-light\">\n-          Reset\n-        </button>\n-      </div>\n-\n-      <ul>\n-        {allGoods.map((good) => (\n-          <li data-cy=\"Good\" key>Dumplings</li>\n-        ))}\n-        <ul>\n-          <li data-cy=\"Good\">Dumplings</li>\n-          <li data-cy=\"Good\">Carrot</li>\n-          <li data-cy=\"Good\">Eggs</li>\n-          <li data-cy=\"Good\">Ice cream</li>\n-          <li data-cy=\"Good\">Apple</li>\n-          <li data-cy=\"Good\">...</li>\n-        </ul>\n-      </ul>\n-    </div>\n-  );\n-};\n-import React from 'react';\n-import 'bulma/css/bulma.css';\n-import './App.scss';\n-\n-export const goodsFromServer = [\n-  'Dumplings',\n-  'Carrot',\n-  'Eggs',\n-  'Ice cream',\n-  'Apple',\n-  'Bread',\n-  'Fish',\n-  'Honey',\n-  'Jam',\n-  'Garlic',\n-];\n-\n-enum SortType {\n-  NONE,\n-  ALPHABET,\n-  LENGTH,\n-}\n-\n-type ReorderOptions = {\n-  sortType: SortType;\n-  isReversed: boolean;\n-};\n-\n-// Use this function in the render method to prepare goods\n-export function getReorderedGoods(\n-  goods: string[],\n-  { sortType, isReversed }: ReorderOptions,\n-) {\n-  // To avoid the original array mutation\n-  const visibleGoods = [...goods];\n-\n-  // Sort and reverse goods if needed\n-  // eslint-disable-next-line no-console\n-  console.log(sortType, isReversed);\n-\n-  return visibleGoods;\n-}\n-\n-// DON'T save goods to the state\n-// type State = {\n-//   isReversed: boolean,\n-//   sortType: SortType,\n-// };\n-\n-export const App: React.FC = () => {\n-  return (\n-    <div className=\"section content\">\n-      <div className=\"buttons\">\n-        <button type=\"button\" className=\"button is-info is-light\">\n-          Sort alphabetically\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-success is-light\">\n-          Sort by length\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-warning is-light\">\n-          Reverse\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-danger is-light\">\n-          Reset\n-        </button>\n-      </div>\n-\n-      <ul>\n-        {allGoods.map((good) => ())}\n-        <ul>\n-          <li data-cy=\"Good\">Dumplings</li>\n-          <li data-cy=\"Good\">Carrot</li>\n-          <li data-cy=\"Good\">Eggs</li>\n-          <li data-cy=\"Good\">Ice cream</li>\n-          <li data-cy=\"Good\">Apple</li>\n-          <li data-cy=\"Good\">...</li>\n-        </ul>\n-      </ul>\n-    </div>\n-  );\n-};\n-import React from 'react';\n-import 'bulma/css/bulma.css';\n-import './App.scss';\n-\n-export const goodsFromServer = [\n-  'Dumplings',\n-  'Carrot',\n-  'Eggs',\n-  'Ice cream',\n-  'Apple',\n-  'Bread',\n-  'Fish',\n-  'Honey',\n-  'Jam',\n-  'Garlic',\n-];\n-\n-enum SortType {\n-  NONE,\n-  ALPHABET,\n-  LENGTH,\n-}\n-\n-type ReorderOptions = {\n-  sortType: SortType;\n-  isReversed: boolean;\n-};\n-\n-// Use this function in the render method to prepare goods\n-export function getReorderedGoods(\n-  goods: string[],\n-  { sortType, isReversed }: ReorderOptions,\n-) {\n-  // To avoid the original array mutation\n-  const visibleGoods = [...goods];\n-\n-  // Sort and reverse goods if needed\n-  // eslint-disable-next-line no-console\n-  console.log(sortType, isReversed);\n-\n-  return visibleGoods;\n-}\n-\n-// DON'T save goods to the state\n-// type State = {\n-//   isReversed: boolean,\n-//   sortType: SortType,\n-// };\n-\n-export const App: React.FC = () => {\n-  return (\n-    <div className=\"section content\">\n-      <div className=\"buttons\">\n-        <button type=\"button\" className=\"button is-info is-light\">\n-          Sort alphabetically\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-success is-light\">\n-          Sort by length\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-warning is-light\">\n-          Reverse\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-danger is-light\">\n-          Reset\n-        </button>\n-      </div>\n-\n-      <ul>\n-        {allGoods.map((good) =)}\n-        <ul>\n-          <li data-cy=\"Good\">Dumplings</li>\n-          <li data-cy=\"Good\">Carrot</li>\n-          <li data-cy=\"Good\">Eggs</li>\n-          <li data-cy=\"Good\">Ice cream</li>\n-          <li data-cy=\"Good\">Apple</li>\n-          <li data-cy=\"Good\">...</li>\n-        </ul>\n-      </ul>\n-    </div>\n-  );\n-};\n-import React from 'react';\n-import 'bulma/css/bulma.css';\n-import './App.scss';\n-\n-export const goodsFromServer = [\n-  'Dumplings',\n-  'Carrot',\n-  'Eggs',\n-  'Ice cream',\n-  'Apple',\n-  'Bread',\n-  'Fish',\n-  'Honey',\n-  'Jam',\n-  'Garlic',\n-];\n-\n-enum SortType {\n-  NONE,\n-  ALPHABET,\n-  LENGTH,\n-}\n-\n-type ReorderOptions = {\n-  sortType: SortType;\n-  isReversed: boolean;\n-};\n-\n-// Use this function in the render method to prepare goods\n-export function getReorderedGoods(\n-  goods: string[],\n-  { sortType, isReversed }: ReorderOptions,\n-) {\n-  // To avoid the original array mutation\n-  const visibleGoods = [...goods];\n-\n-  // Sort and reverse goods if needed\n-  // eslint-disable-next-line no-console\n-  console.log(sortType, isReversed);\n-\n-  return visibleGoods;\n-}\n-\n-// DON'T save goods to the state\n-// type State = {\n-//   isReversed: boolean,\n-//   sortType: SortType,\n-// };\n-\n-export const App: React.FC = () => {\n-  return (\n-    <div className=\"section content\">\n-      <div className=\"buttons\">\n-        <button type=\"button\" className=\"button is-info is-light\">\n-          Sort alphabetically\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-success is-light\">\n-          Sort by length\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-warning is-light\">\n-          Reverse\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-danger is-light\">\n-          Reset\n-        </button>\n-      </div>\n-\n-      <ul>\n-        {allGoods.ma}\n-        <ul>\n-          <li data-cy=\"Good\">Dumplings</li>\n-          <li data-cy=\"Good\">Carrot</li>\n-          <li data-cy=\"Good\">Eggs</li>\n-          <li data-cy=\"Good\">Ice cream</li>\n-          <li data-cy=\"Good\">Apple</li>\n-          <li data-cy=\"Good\">...</li>\n-        </ul>\n-      </ul>\n-    </div>\n-  );\n-};\n-import React from 'react';\n-import 'bulma/css/bulma.css';\n-import './App.scss';\n-\n-export const goodsFromServer = [\n-  'Dumplings',\n-  'Carrot',\n-  'Eggs',\n-  'Ice cream',\n-  'Apple',\n-  'Bread',\n-  'Fish',\n-  'Honey',\n-  'Jam',\n-  'Garlic',\n-];\n-\n-enum SortType {\n-  NONE,\n-  ALPHABET,\n-  LENGTH,\n-}\n-\n-type ReorderOptions = {\n-  sortType: SortType;\n-  isReversed: boolean;\n-};\n-\n-// Use this function in the render method to prepare goods\n-export function getReorderedGoods(\n-  goods: string[],\n-  { sortType, isReversed }: ReorderOptions,\n-) {\n-  // To avoid the original array mutation\n-  const visibleGoods = [...goods];\n-\n-  // Sort and reverse goods if needed\n-  // eslint-disable-next-line no-console\n-  console.log(sortType, isReversed);\n-\n-  return visibleGoods;\n-}\n-\n-// DON'T save goods to the state\n-// type State = {\n-//   isReversed: boolean,\n-//   sortType: SortType,\n-// };\n-\n-export const App: React.FC = () => {\n-  return (\n-    <div className=\"section content\">\n-      <div className=\"buttons\">\n-        <button type=\"button\" className=\"button is-info is-light\">\n-          Sort alphabetically\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-success is-light\">\n-          Sort by length\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-warning is-light\">\n-          Reverse\n-        </button>\n-\n-        <button type=\"button\" className=\"button is-danger is-light\">\n-          Reset\n-        </button>\n-      </div>\n-\n-      <ul>\n-        {al}\n-        <ul>\n-          <li data-cy=\"Good\">Dumplings</li>\n-          <li data-cy=\"Good\">Carrot</li>\n-          <li data-cy=\"Good\">Eggs</li>\n-          <li data-cy=\"Good\">Ice cream</li>\n-          <li data-cy=\"Good\">Apple</li>\n-          <li data-cy=\"Good\">...</li>\n-        </ul>\n-      </ul>\n-    </div>\n-  );\n-};\n"
                },
                {
                    "date": 1712130627858,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,81 @@\n+import React from 'react';\n+import 'bulma/css/bulma.css';\n+import './App.scss';\n+\n+export const goodsFromServer = [\n+  'Dumplings',\n+  'Carrot',\n+  'Eggs',\n+  'Ice cream',\n+  'Apple',\n+  'Bread',\n+  'Fish',\n+  'Honey',\n+  'Jam',\n+  'Garlic',\n+];\n+\n+enum SortType {\n+  NONE,\n+  ALPHABET,\n+  LENGTH,\n+}\n+\n+type ReorderOptions = {\n+  sortType: SortType;\n+  isReversed: boolean;\n+};\n+\n+// Use this function in the render method to prepare goods\n+export function getReorderedGoods(\n+  goods: string[],\n+  { sortType, isReversed }: ReorderOptions,\n+) {\n+  // To avoid the original array mutation\n+  const visibleGoods = [...goods];\n+\n+  // Sort and reverse goods if needed\n+  // eslint-disable-next-line no-console\n+  console.log(sortType, isReversed);\n+\n+  return visibleGoods;\n+}\n+\n+// DON'T save goods to the state\n+// type State = {\n+//   isReversed: boolean,\n+//   sortType: SortType,\n+// };\n+\n+export const App: React.FC = () => {\n+  const allGoods = getReorderedGoods\n+  return (\n+    <div className=\"section content\">\n+      <div className=\"buttons\">\n+        <button type=\"button\" className=\"button is-info is-light\">\n+          Sort alphabetically\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-success is-light\">\n+          Sort by length\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-warning is-light\">\n+          Reverse\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-danger is-light\">\n+          Reset\n+        </button>\n+      </div>\n+\n+      <ul>\n+        {allGoods.map(good => (\n+          <li data-cy=\"Good\" key={good}>\n+            {good}\n+          </li>\n+        ))}\n+      </ul>\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1712130633259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,82 @@\n+import React from 'react';\n+import 'bulma/css/bulma.css';\n+import './App.scss';\n+\n+export const goodsFromServer = [\n+  'Dumplings',\n+  'Carrot',\n+  'Eggs',\n+  'Ice cream',\n+  'Apple',\n+  'Bread',\n+  'Fish',\n+  'Honey',\n+  'Jam',\n+  'Garlic',\n+];\n+\n+enum SortType {\n+  NONE,\n+  ALPHABET,\n+  LENGTH,\n+}\n+\n+type ReorderOptions = {\n+  sortType: SortType;\n+  isReversed: boolean;\n+};\n+\n+// Use this function in the render method to prepare goods\n+export function getReorderedGoods(\n+  goods: string[],\n+  { sortType, isReversed }: ReorderOptions,\n+) {\n+  // To avoid the original array mutation\n+  const visibleGoods = [...goods];\n+\n+  // Sort and reverse goods if needed\n+  // eslint-disable-next-line no-console\n+  console.log(sortType, isReversed);\n+\n+  return visibleGoods;\n+}\n+\n+// DON'T save goods to the state\n+// type State = {\n+//   isReversed: boolean,\n+//   sortType: SortType,\n+// };\n+\n+export const App: React.FC = () => {\n+  const allGoods = getReorderedGoods(\n+    g)\n+  return (\n+    <div className=\"section content\">\n+      <div className=\"buttons\">\n+        <button type=\"button\" className=\"button is-info is-light\">\n+          Sort alphabetically\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-success is-light\">\n+          Sort by length\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-warning is-light\">\n+          Reverse\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-danger is-light\">\n+          Reset\n+        </button>\n+      </div>\n+\n+      <ul>\n+        {allGoods.map(good => (\n+          <li data-cy=\"Good\" key={good}>\n+            {good}\n+          </li>\n+        ))}\n+      </ul>\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1712130639832,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,81 @@\n+import React from 'react';\n+import 'bulma/css/bulma.css';\n+import './App.scss';\n+\n+export const goodsFromServer = [\n+  'Dumplings',\n+  'Carrot',\n+  'Eggs',\n+  'Ice cream',\n+  'Apple',\n+  'Bread',\n+  'Fish',\n+  'Honey',\n+  'Jam',\n+  'Garlic',\n+];\n+\n+enum SortType {\n+  NONE,\n+  ALPHABET,\n+  LENGTH,\n+}\n+\n+type ReorderOptions = {\n+  sortType: SortType;\n+  isReversed: boolean;\n+};\n+\n+// Use this function in the render method to prepare goods\n+export function getReorderedGoods(\n+  goods: string[],\n+  { sortType, isReversed }: ReorderOptions,\n+) {\n+  // To avoid the original array mutation\n+  const visibleGoods = [...goods];\n+\n+  // Sort and reverse goods if needed\n+  // eslint-disable-next-line no-console\n+  console.log(sortType, isReversed);\n+\n+  return visibleGoods;\n+}\n+\n+// DON'T save goods to the state\n+// type State = {\n+//   isReversed: boolean,\n+//   sortType: SortType,\n+// };\n+\n+export const App: React.FC = () => {\n+  const allGoods = getReorderedGoods(g)\n+  return (\n+    <div className=\"section content\">\n+      <div className=\"buttons\">\n+        <button type=\"button\" className=\"button is-info is-light\">\n+          Sort alphabetically\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-success is-light\">\n+          Sort by length\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-warning is-light\">\n+          Reverse\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-danger is-light\">\n+          Reset\n+        </button>\n+      </div>\n+\n+      <ul>\n+        {allGoods.map(good => (\n+          <li data-cy=\"Good\" key={good}>\n+            {good}\n+          </li>\n+        ))}\n+      </ul>\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1712130699591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,81 @@\n+import React from 'react';\n+import 'bulma/css/bulma.css';\n+import './App.scss';\n+\n+export const goodsFromServer = [\n+  'Dumplings',\n+  'Carrot',\n+  'Eggs',\n+  'Ice cream',\n+  'Apple',\n+  'Bread',\n+  'Fish',\n+  'Honey',\n+  'Jam',\n+  'Garlic',\n+];\n+\n+enum SortType {\n+  NONE,\n+  ALPHABET,\n+  LENGTH,\n+}\n+\n+type ReorderOptions = {\n+  sortType: SortType;\n+  isReversed: boolean;\n+};\n+\n+// Use this function in the render method to prepare goods\n+export function getReorderedGoods(\n+  goods: string[],\n+  { sortType, isReversed }: ReorderOptions,\n+) {\n+  // To avoid the original array mutation\n+  const visibleGoods = [...goods];\n+\n+  // Sort and reverse goods if needed\n+  // eslint-disable-next-line no-console\n+  console.log(sortType, isReversed);\n+\n+  return visibleGoods;\n+}\n+\n+// DON'T save goods to the state\n+// type State = {\n+//   isReversed: boolean,\n+//   sortType: SortType,\n+// };\n+\n+export const App: React.FC = () => {\n+  const allGoods = getReorderedGoods(goodsFromServer, )\n+  return (\n+    <div className=\"section content\">\n+      <div className=\"buttons\">\n+        <button type=\"button\" className=\"button is-info is-light\">\n+          Sort alphabetically\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-success is-light\">\n+          Sort by length\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-warning is-light\">\n+          Reverse\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-danger is-light\">\n+          Reset\n+        </button>\n+      </div>\n+\n+      <ul>\n+        {allGoods.map(good => (\n+          <li data-cy=\"Good\" key={good}>\n+            {good}\n+          </li>\n+        ))}\n+      </ul>\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1712130705400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,83 @@\n+import React from 'react';\n+import 'bulma/css/bulma.css';\n+import './App.scss';\n+\n+export const goodsFromServer = [\n+  'Dumplings',\n+  'Carrot',\n+  'Eggs',\n+  'Ice cream',\n+  'Apple',\n+  'Bread',\n+  'Fish',\n+  'Honey',\n+  'Jam',\n+  'Garlic',\n+];\n+\n+enum SortType {\n+  NONE,\n+  ALPHABET,\n+  LENGTH,\n+}\n+\n+type ReorderOptions = {\n+  sortType: SortType;\n+  isReversed: boolean;\n+};\n+\n+// Use this function in the render method to prepare goods\n+export function getReorderedGoods(\n+  goods: string[],\n+  { sortType, isReversed }: ReorderOptions,\n+) {\n+  // To avoid the original array mutation\n+  const visibleGoods = [...goods];\n+\n+  // Sort and reverse goods if needed\n+  // eslint-disable-next-line no-console\n+  console.log(sortType, isReversed);\n+\n+  return visibleGoods;\n+}\n+\n+// DON'T save goods to the state\n+// type State = {\n+//   isReversed: boolean,\n+//   sortType: SortType,\n+// };\n+\n+export const App: React.FC = () => {\n+  const allGoods = getReorderedGoods(goodsFromServer, {\n+    sort\n+  })\n+  return (\n+    <div className=\"section content\">\n+      <div className=\"buttons\">\n+        <button type=\"button\" className=\"button is-info is-light\">\n+          Sort alphabetically\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-success is-light\">\n+          Sort by length\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-warning is-light\">\n+          Reverse\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-danger is-light\">\n+          Reset\n+        </button>\n+      </div>\n+\n+      <ul>\n+        {allGoods.map(good => (\n+          <li data-cy=\"Good\" key={good}>\n+            {good}\n+          </li>\n+        ))}\n+      </ul>\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1712130711738,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,84 @@\n+import React from 'react';\n+import 'bulma/css/bulma.css';\n+import './App.scss';\n+\n+export const goodsFromServer = [\n+  'Dumplings',\n+  'Carrot',\n+  'Eggs',\n+  'Ice cream',\n+  'Apple',\n+  'Bread',\n+  'Fish',\n+  'Honey',\n+  'Jam',\n+  'Garlic',\n+];\n+\n+enum SortType {\n+  NONE,\n+  ALPHABET,\n+  LENGTH,\n+}\n+\n+type ReorderOptions = {\n+  sortType: SortType;\n+  isReversed: boolean;\n+};\n+\n+// Use this function in the render method to prepare goods\n+export function getReorderedGoods(\n+  goods: string[],\n+  { sortType, isReversed }: ReorderOptions,\n+) {\n+  // To avoid the original array mutation\n+  const visibleGoods = [...goods];\n+\n+  // Sort and reverse goods if needed\n+  // eslint-disable-next-line no-console\n+  console.log(sortType, isReversed);\n+\n+  return visibleGoods;\n+}\n+\n+// DON'T save goods to the state\n+// type State = {\n+//   isReversed: boolean,\n+//   sortType: SortType,\n+// };\n+\n+export const App: React.FC = () => {\n+  const allGoods = getReorderedGoods(goodsFromServer, {\n+    sortType,\n+    o\n+  })\n+  return (\n+    <div className=\"section content\">\n+      <div className=\"buttons\">\n+        <button type=\"button\" className=\"button is-info is-light\">\n+          Sort alphabetically\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-success is-light\">\n+          Sort by length\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-warning is-light\">\n+          Reverse\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-danger is-light\">\n+          Reset\n+        </button>\n+      </div>\n+\n+      <ul>\n+        {allGoods.map(good => (\n+          <li data-cy=\"Good\" key={good}>\n+            {good}\n+          </li>\n+        ))}\n+      </ul>\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1712130729841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,84 @@\n+import React from 'react';\n+import 'bulma/css/bulma.css';\n+import './App.scss';\n+\n+export const goodsFromServer = [\n+  'Dumplings',\n+  'Carrot',\n+  'Eggs',\n+  'Ice cream',\n+  'Apple',\n+  'Bread',\n+  'Fish',\n+  'Honey',\n+  'Jam',\n+  'Garlic',\n+];\n+\n+enum SortType {\n+  NONE,\n+  ALPHABET,\n+  LENGTH,\n+}\n+\n+type ReorderOptions = {\n+  sortType: SortType;\n+  isReversed: boolean;\n+};\n+\n+// Use this function in the render method to prepare goods\n+export function getReorderedGoods(\n+  goods: string[],\n+  { sortType, isReversed }: ReorderOptions,\n+) {\n+  // To avoid the original array mutation\n+  const visibleGoods = [...goods];\n+\n+  // Sort and reverse goods if needed\n+  // eslint-disable-next-line no-console\n+  console.log(sortType, isReversed);\n+\n+  return visibleGoods;\n+}\n+\n+// DON'T save goods to the state\n+// type State = {\n+//   isReversed: boolean,\n+//   sortType: SortType,\n+// };\n+\n+export const App: React.FC = () => {\n+  const allGoods = getReorderedGoods(goodsFromServer, {\n+    sortType,\n+    order,\n+  });\n+  return (\n+    <div className=\"section content\">\n+      <div className=\"buttons\">\n+        <button type=\"button\" className=\"button is-info is-light\">\n+          Sort alphabetically\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-success is-light\">\n+          Sort by length\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-warning is-light\">\n+          Reverse\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-danger is-light\">\n+          Reset\n+        </button>\n+      </div>\n+\n+      <ul>\n+        {allGoods.map(good => (\n+          <li data-cy=\"Good\" key={good}>\n+            {good}\n+          </li>\n+        ))}\n+      </ul>\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1712130739912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+import React from 'react';\n+import 'bulma/css/bulma.css';\n+import './App.scss';\n+\n+export const goodsFromServer = [\n+  'Dumplings',\n+  'Carrot',\n+  'Eggs',\n+  'Ice cream',\n+  'Apple',\n+  'Bread',\n+  'Fish',\n+  'Honey',\n+  'Jam',\n+  'Garlic',\n+];\n+\n+enum SortType {\n+  NONE,\n+  ALPHABET,\n+  LENGTH,\n+}\n+\n+type ReorderOptions = {\n+  sortType: SortType;\n+  isReversed: boolean;\n+};\n+\n+// Use this function in the render method to prepare goods\n+export function getReorderedGoods(\n+  goods: string[],\n+  { sortType, isReversed }: ReorderOptions,\n+) {\n+  // To avoid the original array mutation\n+  const visibleGoods = [...goods];\n+\n+  // Sort and reverse goods if needed\n+  // eslint-disable-next-line no-console\n+  console.log(sortType, isReversed);\n+\n+  return visibleGoods;\n+}\n+\n+// DON'T save goods to the state\n+// type State = {\n+//   isReversed: boolean,\n+//   sortType: SortType,\n+// };\n+\n+export const App: React.FC = () => {\n+  \n+  const allGoods = getReorderedGoods(goodsFromServer, {\n+    sortType,\n+    order,\n+  });\n+\n+  return (\n+    <div className=\"section content\">\n+      <div className=\"buttons\">\n+        <button type=\"button\" className=\"button is-info is-light\">\n+          Sort alphabetically\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-success is-light\">\n+          Sort by length\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-warning is-light\">\n+          Reverse\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-danger is-light\">\n+          Reset\n+        </button>\n+      </div>\n+\n+      <ul>\n+        {allGoods.map(good => (\n+          <li data-cy=\"Good\" key={good}>\n+            {good}\n+          </li>\n+        ))}\n+      </ul>\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1712130745613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+import React from 'react';\n+import 'bulma/css/bulma.css';\n+import './App.scss';\n+\n+export const goodsFromServer = [\n+  'Dumplings',\n+  'Carrot',\n+  'Eggs',\n+  'Ice cream',\n+  'Apple',\n+  'Bread',\n+  'Fish',\n+  'Honey',\n+  'Jam',\n+  'Garlic',\n+];\n+\n+enum SortType {\n+  NONE,\n+  ALPHABET,\n+  LENGTH,\n+}\n+\n+type ReorderOptions = {\n+  sortType: SortType;\n+  isReversed: boolean;\n+};\n+\n+// Use this function in the render method to prepare goods\n+export function getReorderedGoods(\n+  goods: string[],\n+  { sortType, isReversed }: ReorderOptions,\n+) {\n+  // To avoid the original array mutation\n+  const visibleGoods = [...goods];\n+\n+  // Sort and reverse goods if needed\n+  // eslint-disable-next-line no-console\n+  console.log(sortType, isReversed);\n+\n+  return visibleGoods;\n+}\n+\n+// DON'T save goods to the state\n+// type State = {\n+//   isReversed: boolean,\n+//   sortType: SortType,\n+// };\n+\n+export const App: React.FC = () => {\n+  const [so]\n+  const allGoods = getReorderedGoods(goodsFromServer, {\n+    sortType,\n+    order,\n+  });\n+\n+  return (\n+    <div className=\"section content\">\n+      <div className=\"buttons\">\n+        <button type=\"button\" className=\"button is-info is-light\">\n+          Sort alphabetically\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-success is-light\">\n+          Sort by length\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-warning is-light\">\n+          Reverse\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-danger is-light\">\n+          Reset\n+        </button>\n+      </div>\n+\n+      <ul>\n+        {allGoods.map(good => (\n+          <li data-cy=\"Good\" key={good}>\n+            {good}\n+          </li>\n+        ))}\n+      </ul>\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1712130751935,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+import React from 'react';\n+import 'bulma/css/bulma.css';\n+import './App.scss';\n+\n+export const goodsFromServer = [\n+  'Dumplings',\n+  'Carrot',\n+  'Eggs',\n+  'Ice cream',\n+  'Apple',\n+  'Bread',\n+  'Fish',\n+  'Honey',\n+  'Jam',\n+  'Garlic',\n+];\n+\n+enum SortType {\n+  NONE,\n+  ALPHABET,\n+  LENGTH,\n+}\n+\n+type ReorderOptions = {\n+  sortType: SortType;\n+  isReversed: boolean;\n+};\n+\n+// Use this function in the render method to prepare goods\n+export function getReorderedGoods(\n+  goods: string[],\n+  { sortType, isReversed }: ReorderOptions,\n+) {\n+  // To avoid the original array mutation\n+  const visibleGoods = [...goods];\n+\n+  // Sort and reverse goods if needed\n+  // eslint-disable-next-line no-console\n+  console.log(sortType, isReversed);\n+\n+  return visibleGoods;\n+}\n+\n+// DON'T save goods to the state\n+// type State = {\n+//   isReversed: boolean,\n+//   sortType: SortType,\n+// };\n+\n+export const App: React.FC = () => {\n+  const [sortField]\n+  const allGoods = getReorderedGoods(goodsFromServer, {\n+    sortType,\n+    order,\n+  });\n+\n+  return (\n+    <div className=\"section content\">\n+      <div className=\"buttons\">\n+        <button type=\"button\" className=\"button is-info is-light\">\n+          Sort alphabetically\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-success is-light\">\n+          Sort by length\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-warning is-light\">\n+          Reverse\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-danger is-light\">\n+          Reset\n+        </button>\n+      </div>\n+\n+      <ul>\n+        {allGoods.map(good => (\n+          <li data-cy=\"Good\" key={good}>\n+            {good}\n+          </li>\n+        ))}\n+      </ul>\n+    </div>\n+  );\n+};\n"
                },
                {
                    "date": 1712130758015,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,9 +47,9 @@\n //   sortType: SortType,\n // };\n \n export const App: React.FC = () => {\n-  const [sortField, setSortF]\n+  const [sortField, setSortFi]\n   const allGoods = getReorderedGoods(goodsFromServer, {\n     sortType,\n     order,\n   });\n"
                },
                {
                    "date": 1712130763605,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+import React from 'react';\n+import 'bulma/css/bulma.css';\n+import './App.scss';\n+\n+export const goodsFromServer = [\n+  'Dumplings',\n+  'Carrot',\n+  'Eggs',\n+  'Ice cream',\n+  'Apple',\n+  'Bread',\n+  'Fish',\n+  'Honey',\n+  'Jam',\n+  'Garlic',\n+];\n+\n+enum SortType {\n+  NONE,\n+  ALPHABET,\n+  LENGTH,\n+}\n+\n+type ReorderOptions = {\n+  sortType: SortType;\n+  isReversed: boolean;\n+};\n+\n+// Use this function in the render method to prepare goods\n+export function getReorderedGoods(\n+  goods: string[],\n+  { sortType, isReversed }: ReorderOptions,\n+) {\n+  // To avoid the original array mutation\n+  const visibleGoods = [...goods];\n+\n+  // Sort and reverse goods if needed\n+  // eslint-disable-next-line no-console\n+  console.log(sortType, isReversed);\n+\n+  return visibleGoods;\n+}\n+\n+// DON'T save goods to the state\n+// type State = {\n+//   isReversed: boolean,\n+//   sortType: SortType,\n+// };\n+\n+export const App: React.FC = () => {\n+  const [sortField, setSortField] = use\n+  const allGoods = getReorderedGoods(goodsFromServer, {\n+    sortType,\n+    order,\n+  });\n+\n+  return (\n+    <div className=\"section content\">\n+      <div className=\"buttons\">\n+        <button type=\"button\" className=\"button is-info is-light\">\n+          Sort alphabetically\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-success is-light\">\n+          Sort by length\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-warning is-light\">\n+          Reverse\n+        </button>\n+\n+        <button type=\"button\" className=\"button is-danger is-light\">\n+          Reset\n+        </button>\n+      </div>\n+\n+      <ul>\n+        {allGoods.map(good => (\n+          <li data-cy=\"Good\" key={good}>\n+            {good}\n+          </li>\n+        ))}\n+      </ul>\n+    </div>\n+  );\n+};\n"
                }
            ],
            "date": 1712130310090,
            "name": "Commit-0",
            "content": "import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType;\n  isReversed: boolean;\n};\n\n// Use this function in the render method to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n// type State = {\n//   isReversed: boolean,\n//   sortType: SortType,\n// };\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button type=\"button\" className=\"button is-info is-light\">\n          Sort alphabetically\n        </button>\n\n        <button type=\"button\" className=\"button is-success is-light\">\n          Sort by length\n        </button>\n\n        <button type=\"button\" className=\"button is-warning is-light\">\n          Reverse\n        </button>\n\n        <button type=\"button\" className=\"button is-danger is-light\">\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        \n        <ul>\n          <li data-cy=\"Good\">Dumplings</li>\n          <li data-cy=\"Good\">Carrot</li>\n          <li data-cy=\"Good\">Eggs</li>\n          <li data-cy=\"Good\">Ice cream</li>\n          <li data-cy=\"Good\">Apple</li>\n          <li data-cy=\"Good\">...</li>\n        </ul>\n      </ul>\n    </div>\n  );\n};\n"
        }
    ]
}