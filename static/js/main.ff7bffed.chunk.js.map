{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","this","visibleGoods","goods","LENGTH","sort","a","b","length","ALPABET","localeCompare","reverse","getReorderedGoods","className","type","classNames","onClick","setState","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KAmCE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUL,EAASM,MAHvB,4CAME,WAAU,IAAD,OACP,EAAiCC,KAAKJ,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SAEdG,EAjCH,SACLC,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUD,EACZ,EADYA,WAENI,EAAY,YAAOC,GAYzB,OAVIJ,IAAaL,EAASU,OACxBF,EAAaG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEE,OAASD,EAAEC,UAChCT,IAAaL,EAASe,SAC/BP,EAAaG,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,cAAcH,MAG1CT,GACFI,EAAaS,UAGRT,EAiBgBU,CACnBjB,EACA,CAAEI,WAAUD,eAGd,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,iBAAkB,CACtC,WAAYhB,IAAaL,EAASe,UAEpCO,QAAS,kBAAM,EAAKC,SAAS,CAAElB,SAAUL,EAASe,WALpD,iCAUA,wBACEK,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,WAAYhB,IAAaL,EAASU,SAEpCY,QAAS,kBAAM,EAAKC,SAAS,CAAElB,SAAUL,EAASU,UALpD,4BAUA,wBACEU,KAAK,SACLD,UAAWE,IAAW,oBAAqB,CACzC,YAAajB,IAEfkB,QAAS,kBAAM,EAAKC,UAClB,SAAApB,GAAK,MAAK,CAAEC,YAAaD,EAAMC,gBANnC,sBAYEC,IAAaL,EAASM,MAAQF,IAC9B,wBACEgB,KAAK,SACLD,UAAU,4BACVG,QAAS,WACP,EAAKC,SAAS,CACZlB,SAAUL,EAASM,KACnBF,YAAY,KANlB,sBAeJ,6BACGI,EAAagB,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,eAnErB,GAAyBC,IAAMC,WClD/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ff7bffed.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType === SortType.LENGTH) {\n    visibleGoods.sort((a, b) => a.length - b.length);\n  } else if (sortType === SortType.ALPABET) {\n    visibleGoods.sort((a, b) => a.localeCompare(b));\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n\n    const visibleGoods = getReorderedGoods(\n      goodsFromServer,\n      { sortType, isReversed },\n    );\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames('button is-info', {\n              'is-light': sortType !== SortType.ALPABET,\n            })}\n            onClick={() => this.setState({ sortType: SortType.ALPABET })}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-success', {\n              'is-light': sortType !== SortType.LENGTH,\n            })}\n            onClick={() => this.setState({ sortType: SortType.LENGTH })}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames('button is-warning', {\n              'is-light': !isReversed,\n            })}\n            onClick={() => this.setState(\n              state => ({ isReversed: !state.isReversed }),\n            )}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={() => {\n                this.setState({\n                  sortType: SortType.NONE,\n                  isReversed: false,\n                });\n              }}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {visibleGoods.map(good => (\n            <li key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}